@page "/login"

@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IUserService userService

<div class="card">
    <h3>Create User</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput" />
        <input type="password" @bind="password" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label>@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username) && string.IsNullOrEmpty(password))" class="acceptbtn">Create</button>
    </div>
</div>


@code {
    private string username = "";
    private string password = "";
    private string resultMsg = "";

    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await userService.CreateAsync(new UserCreationDTO(username, password));
            username = "";
            resultMsg = "User successfully created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
        }
    }

}
